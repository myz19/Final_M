In the first version I imported collections and random so I can use some methods in those modules. I created two classes
crosswordCell and crossword(object). For the crosswordCell I made the default value "_". I overrode the __str__ method
to return a string of the value. In crossword(object) I defaulted the height and width to be 10. I created data which
is 2-d array. I overrode the __str__ method again and returned the list as a string. I created a function that assigned
a value to a specific index. I created a function getCell that gets a cell at a specific index. The function getCellValue
gives the value of the cell at a specific index. The functions setHeight and setWidth sets the height and width if its
not the default. I created 4 functions outside of both classes: getFile, giveClue, scramble, and scrambleCrossword.
The function getFile gets a crossword from calling a file with a crossword in it. It gets the height and width of the
crossword and passes it to variables. Then using two for loops for the row and every value in each row, I assign a value
to each space in the crossword.
The function giveClue gives three clues. I created a dictionary that matched every letter with a number. The for loop
calls the random pick function three times to give three matches of letters and numbers as clues. The function scramble
returns the value from the key that is given as the input. scrambleCrossword uses two for loops one for the every row
and then every value in each row. It changes all the letters to their numbers that are corresponding in the dictionary
using the assignValue function in the crossword class. Then I created a menu with options. The first option is to just
get a crossword from a file that has a crossword in it. The second option calls the same function to get the file with a
crossword but it also calls the scrambleCrossword function and changes all the letters in the crossword in the file to
numbers for user2 to solve. This option also prints three clues.

The second version is the same except I added values to the crosswordCell class. I added directions (left, right, up,
down). I also added directions and neighbors as empty lists. The function addNeighbors appends a neighbor to the neighbor
list and its direction into the direction list. The direction lists tells the current cell where it can go. The isFull
function tells if a current cell is full or not.

The third version is the same except I added a new function called insertWord that allows the user to add a specific
word to the crossword giving the index, direction, and word. I had to make use that the word length could fit into
the crossword based on the given index. If it could, I had to make sure that the indexes were correct since strings
start with the index 0. I did the same thing for both down and cross directions. Then I created a new option for the
menu allowing the user to input a position, direction, and word and then call the function I created to print the new
crossword. I tried to create another function called updateCellRelationship which showed which directions were available
from different cells in the crossword.

I'm not sure how to print out the crossword with numbers with spaces in between the numbers (letters) so that the user
can easily see what number it is if it is a 2-digit number.